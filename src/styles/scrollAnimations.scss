// Import variables
@use 'variables.scss';

// Mixin for general animations
@mixin animations {
    animation-timeline: view();
}
  
// Mixin for scale animations based on axis
@mixin scaleAnimations($axis) {
    $animationProps: linear both;
    animation-range: entry var(--fade-animation-value) cover var(--fade-animation-value);
    
    @if $axis == both {
        animation: scaleBoth #{$animationProps};
    }
    @else {
        animation: scaleOne #{$animationProps};
    }
    
    // Keyframes for scaling both axes
    @keyframes scaleBoth {
        from {
            scale: 0;
        }
        to {
            scale: 1;
        }
    }
    // Keyframes for scaling one axis
    @keyframes scaleOne {
        from {
            scale: #{$axis} 0;
        }
        to {
            scale: #{$axis} 1;
        }
    }
}

// Mixin for split animations
@mixin splitAnimations {
    animation: split linear both;
    animation-range: cover calc(var(--split-animation-value)/1.5) contain calc(var(--split-animation-value)*2);
}
  
// Apply animations to main elements except specific classes
main:not(.projects, .profile, .portal, .frame-page) > * {
    // Apply scale animations to elements except hero and those containing sections
    // &:not(.hero, :has( > section)) {
    //     @include scaleAnimations(both);
    //     @include animations;
    // }
    // Apply split animations to elements containing sections
    &:has( > section) {
        &:not(.split) {
            --amt: calc((var(--dWidth)/2) - 50%);
        }
        overflow-x: clip;
        > :is(section:has( ~ section), section ~ section) {
            --dir: 0;

            // Uncomment These After Debugging or when deciding to bring back the split animations on sections
            // @include splitAnimations;
            // @include animations;
            &:first-of-type {
                --dir: -1;
            }
            &:last-of-type {
                --dir:  1;
            }
        }
    }

    // Apply scale animations to vertical and horizontal lines
    // .vHr {
    //     transform-origin: top;
    //     @include scaleAnimations(y);
    //     @include animations;
    // }
    // .hHr {
    //     @include scaleAnimations(x);
    //     @include animations;
    // }

    // Apply general animations to vertical and horizontal lines
    .vHr, .hHr {
        @include animations;
    }
}

// Keyframes for split animations
@keyframes split {
    from {
        translate: calc(var(--dir)*((var(--amt, 100%)) + 50px)) 0;//-100%;
    }
    to {
        translate: 0 0;
    }
}