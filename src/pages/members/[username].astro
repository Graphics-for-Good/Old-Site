---
// Import the Layout component
import Layout from '../../layouts/Layout.astro'

// Import the Modal and LargeImage components
import Modal from '../../components/modal.astro'
import LargeImage from '../../components/largeImage.astro'

// Import the stylesheet for the members page and photos
import '../../styles/pages/members.scss'
import '../../styles/photos.scss'

// Import the updateMember function
import updateMember from '../../../members/updateMember.js'

// Load default user data
var dUserData = await Astro.glob('../../../members/_default/info.js')
dUserData = dUserData.find(d => !!d)
if (Array.isArray(dUserData)) {
  if (dUserData.length > 0) dUserData = dUserData[0]
  else dUserData = {}
}

// Helper functions to get file name and extension
function getFName(str) {
  if (str.includes('/')) str = str.split('/').slice(-1)[0]
  if (str.includes('?')) str = str.split('?')[0]
  return str
}

function getFNameNoExt(str, level) {
  str = getFName(str)
  str = str.slice(0, -1*getFExt(str, level).length)
  return str
}

function getFExt(str, level=1) {
  str = getFName(str)
  if (level > 0) level *= -1
  if (str.includes('.')) {
    str = str.split('.')
    switch (level) {
      case 0: 
        break
      default: 
        str = str.slice(level)
        break
      }
    str = `.${str.join('.')}`
  }
  return str
}

// Helper function to get the first name
function firstName(user) {
  user = user.split(' ')[0]
  return user
}

// Import all portfolio images
const imgs = import.meta.glob(`../../../members/*/portfolio/*/info.js`, {eager:true})
const pImgs = []

for (const path in imgs) {
  pImgs.push(imgs[path].default as any)
}

// Function to get static paths for member profiles
export async function getStaticPaths() {
  var userDatas = await Astro.glob('../../../members/*/info.js')

  return userDatas.map(userData => {
    if (userData.default) userData = userData.default
    return {
      params: {username: userData.username},
      props: { userData },
    }
  });
}

// Get the user data from Astro props
var { userData } = Astro.props;
if (!userData) userData = dUserData

if (!userData) return Astro.redirect('/members/')

if (!userData) console.log(`\n${userData.username}`)
if (!userData.portfolio) userData.portfolio = []
userData = updateMember(userData)

// Set user status
if (userData.status) {
  if (userData.status === 'activeGrad') userData.status = 'active'
}
else userData.status = 'inactive'

// Filter portfolio images for the user
var portfolioImgs = pImgs.filter(img => userData.username === img.username)
userData.portfolio = portfolioImgs

---
<!-- Use the Layout component and set the page title to the user's name -->
<Layout title={userData.name}>
  <!-- Main content area with a class of "profile" -->
  <main id="content" class="profile">
    {
      userData.status ? 
        <section>
          {
            (userData.status === 'active' && userData.pfp) ? <img class="pfp" id="pfp" src={userData.pfp.url} /> : ''
          }
          <h1 class="name" id="name">{userData.name}</h1>
          {
            (userData.status === 'active' && userData.email) ? <a class="email" id="email" href={`mailto:${userData.email.address}`}>{userData.email.address}</a> : ''
          }
          {
            (userData.status === 'active' && userData.location) ? 
              <a class="location" id="location" href={userData.location.mapLink}>        
                <div></div>
                <span>{userData.location.combined}</span>
              </a>
            : ''
          }
          {
            (userData.status === 'active' && userData.socials.length < 0) ? 
              <ul class="socials">
                  {
                    userData.socials.map((social) => (
                      <li>
                        <a href={social.url} target="_blank" style={`background-image: url('${social.icon}')`}></a>
                      </li>
                    ))
                  }
              </ul>
            : ''
          }
          <p class="bio" id="bio" set:html={userData.bio.result}></p>
          {
            (userData.status === 'active' && userData.portfolio.length > 0) ? 
              <ul class="photos" style="height: auto; gap: 25px;">
                {
                  userData.portfolio.map(img => {
                    return (
                      <li>
                        <LargeImage src={`/assets/members/${userData.username}/portfolio/${encodeURIComponent(img.file)}`} alt={`${img.file} by ${firstName(userData.name)}`} draggable={false} id="" orientation="" classes="" fullRes={} />
                      </li>
                    )
                  })
                }
              </ul>
            : ''
          }
        </section>
       : 
        <section>
          <p>Unknown User Status, Displaying raw "userData".</p>
          <pre>{JSON.stringify(userData, null, 4)}</pre>
        </section>
    }
  </main>
  <Modal />
</Layout>