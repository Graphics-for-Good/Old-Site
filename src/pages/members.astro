---
// Import all member info files
var theMembers = import.meta.glob('../../members/*/info.js', { eager: true });
var allMembers = Object.values(theMembers);
var members = [];

// Sort members by order first
const orderedMembers = allMembers
    .filter(m => m.default.order)
    .sort((a, b) => (a.default.order || 0) - (b.default.order || 0));

members.push(...orderedMembers);

// Get unique roles excluding 'Member' and sort them
const roleMembers = [...new Set(
    allMembers
        .filter(m => m.default.role?.name && m.default.role.name !== 'Member' && !m.default.order)
        .map(m => m.default.role.name)
)].sort();

// Add members by role
roleMembers.forEach(role => {
    const membersWithRole = allMembers.filter(m => 
        m.default.role?.name === role && !m.default.order
    );
    members.push(...membersWithRole);
});

// Add remaining regular members
const regularMembers = allMembers.filter(m => 
    (!m.default.role || m.default.role.name === 'Member') && 
    !m.default.order
);
members.push(...regularMembers);

// Import the Layout component
import Layout from '../layouts/Layout.astro'
// Import the Hero component
import Hero from '../components/hero.astro'

// Import the stylesheet for the members page and photos
import '../styles/pages/members.scss'
import '../styles/photos.scss'
---
<!-- Use the Layout component and set the page title to "Members" -->
<Layout title="Members">
    <!-- Main content area -->
    <main id="content">
        <!-- Use the Hero component with a class of "fullHeight" -->
        <Hero classItems="fullHeight">
            <ul id="menu">
                <h1>Club Members</h1>
                {
                    // Map through the members and display them
                    members.map((member) => {
                        if (member.default) member = member.default

                        // Only display active members whose username does not start with '_'
                        if (!member.username.startsWith('_') && member.status === 'active') {
                            var username = member.username
                            var role = !!member.role ? member.role.name === 'Member' ? '' : member.role.name : ''

                            return (
                                <a href={`/members/${username}/`}>
                                    <li>
                                        {member.name}
                                        {
                                            !!role ? <span id="tag">({role})</span> : ''
                                        }
                                    </li>
                                </a>
                            )
                        }
                    })
                }
            </ul>
        </Hero>
    </main>
    <!-- Inline script to remove query parameters from the URL -->
    <script is:inline>
        if (location.href.includes('?m=')) {
            location.href = location.pathname
        }
    </script>
</Layout>