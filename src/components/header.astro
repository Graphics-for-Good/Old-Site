---
// Import the necessary styles for the header component
import '../styles/components/header.scss'

// Get the current path and domain from Astro's URL object
var path = Astro.url.pathname
var domain = Astro.url.origin

// Normalize the path by removing leading and trailing slashes
if (path.startsWith('/') && path !== '/') path = path.slice(1)
if (path.endsWith('/') && path !== '/') path = path.slice(0, path.length-1)

// Load navigation link changes from the configuration file
var navLinkChanges = await Astro.glob('../../config/navbar/links.js')
navLinkChanges = navLinkChanges.find(data => data).default

// Extract path changes from the navigation link changes
var pathChanges = navLinkChanges.pathChanges

// Load all pages in the pages directory
var pages = await Astro.glob('../pages/*.astro')

// Initialize an empty array to store the links
var links = []

// Add the Home link to the links array
pages.map(page => {
  var link = getLink(page)
  if (!link) return
  if (link.name === 'Home') {
    links.push(link)
  }
})

// Add other links to the links array
pages.map(page => {
  var link = getLink(page)
  if (!link) return
  if (link.name !== 'Home') {
    if (link.path) {
      links.push(link)
    }
  }
})

// Function to generate a link object from a page
function getLink(link) {
  var lPath = link.url
  var hasHome = false
  
  var fileName = lPath
  if (!fileName) return
  if (fileName.startsWith('/')) fileName = fileName.slice(1)
  if (fileName === '' && !hasHome) {
    fileName = 'home'
    hasHome = true
  }
  else if (fileName.startsWith('_')) return ''
  else if (fileName.startsWith('[') && fileName.endsWith(']')) return {}
  else if (parseInt(fileName)) return {}

  var rep = pathChanges.filter(r => r.key === fileName)
  if (rep.length > 0) fileName = rep[0].value

  var nameParts = []
  if (fileName.includes('-')) nameParts = fileName.split('-')
  else nameParts = [fileName]

  nameParts.forEach((p, i) => {
    nameParts[i] = `${p.substring(0, 1).toUpperCase()}${p.slice(1)}`
  })

  var name = nameParts.join(' ')
  var extraClasses = ''

  if (lPath === 'home') lPath = '/'
  if (lPath === path) extraClasses += ' primary'
  if (!lPath.includes('://')) lPath = `/${lPath}/`

  if (lPath.endsWith('//')) lPath = lPath.slice(0, -1)
  if (lPath.startsWith('//')) lPath = lPath.slice(1)

  return {
    path: lPath,
    extraClasses: extraClasses,
    name: name
  }
}

---
<!-- Skip to Content link for accessibility -->
<a id="go2content" href="javascript:scrollToNum()">Skip to Content</a>

<!-- Header component containing the logo, navigation, and social links -->
<header class="header">
  <a href="/" class="logo-parent">
    <img class="logo" src="/assets/Logo-Blank.svg" alt="Graphics for Good Logo" title="Our Logo">
  </a >
  <nav class="nav">
    <input type="checkbox" id="closeNav" style="--display: none;" />
    <label for="closeNav" class="nav-hbg">
      <span class="material-symbols-outlined icon">menu</span>
    </label>
    <div class="nav-btns">
      <div class="nav-btns__inner">
        <div class="nav-info">
          <h3>Navigation</h3>
          <label for="closeNav" class="mob-nav-clse">
            <span class="material-symbols-outlined icon">close</span>
          </label>
        </div>
        {
          // Render navigation links
          links.map(link => {
            var lPath = link.path
            var extraClasses = ''

            if (!lPath) {
              lPath = link.name.toLowerCase()
              if (lPath.includes(' ')) lPath = lPath.split(' ').join('')
            }

            if (lPath === 'home') lPath = '/'
            if (lPath === path) extraClasses += ' primary'
            if (!lPath.includes('://')) lPath = `/${lPath}/`

            if (lPath.endsWith('//')) lPath = lPath.slice(0, -1)
            if (lPath.startsWith('//')) lPath = lPath.slice(1)

            return <a href={lPath} class={`btn${extraClasses}`}>{link.name}</a>
          })
        }
      </div>
    </div>
  </nav>
  <div class="social">
    <a href="mailto:hello@graphics-for-good.com" title="Email Us" id="email" target="_blank"></a>
    <a href="https://instagram.com/4goodgraphics" title="Club Projects Instagram" id="instagram"></a>
    <a href="https://instagram.com/g4g_dtech" title="Club Updates Instagram" id="instagram"></a>
  </div>
</header>