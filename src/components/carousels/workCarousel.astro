---
import Carousel from '../carousel.astro'
import LargeImage from '../largeImage.astro'

const { carouselIndex } = Astro.props

const imags = import.meta.glob(`../../../members/*/portfolio/*/info.js`, {eager:true})

var imgs = []
for (const path in imags) {
  imgs.push(imgs[path] as any)
}

imgs.forEach((img, i) => {
    if (!img) return
    if (img.default) images[i] = img.default
})

var images = []
imgs.forEach(img => {
    if (!img) return
    var alreadyHas = images.filter(i => i.file === img.file).length > 0
    if (!alreadyHas) images.push(img)
})

images.forEach((img, i) => {
    var fullRes = fullRes.filter(r => r.name === getFNameNoExt(img.src))
    if (fullRes.length > 0) {
        img.fullRes = fullRes[0].src
    }

    images[i] = img
})

function getFName(str) {
    if (str.includes('/')) str = str.split('/').slice(-1)[0]
    return str
}

function getFNameNoExt(str) {
    if (str.includes('/')) str = str.split('/').slice(-1)[0]
    str = str.slice(0, -1*getFExt(str, 2).length)
    return str
}

function getFExt(str, level=1) {
    str = getFName(str)
    if (level > 0) level *= -1
    if (str.includes('.')) {
        str = str.split('.')
        switch (level) {
            case 0: 
                break
            default: 
                str = str.slice(level)
                break
        }
        str = str.join('.')
    }
    return str
}

function toProper(user) {
    user = `${user.slice(0, 1).toUpperCase()}${user.slice(1)}`
    return user
}

var dId = 'workCarousel'
---
<Carousel carouselIndex={carouselIndex} dataColumns={images.length} dataId={dId}>
    <p>Coming Really Soon!</p>
    {
        (
            images.map((img, i) => {
                <LargeImage id={`${dId}-${i}`} src={img.src} alt={`${getFNameNoExt(img.src)} by ${toProper(img.username)}`} draggable={false} fullRes={img.fullRes} />
            })
        )   
    }
</Carousel>