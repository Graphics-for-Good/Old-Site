---
import Carousel from '../carousel.astro'
import LargeImage from '../largeImage.astro'

const { carouselIndex } = Astro.props

var images = []
var fullRes = []

var imgs = []// await Astro.glob('../../../members/*/portfolio/*/*')

imgs.forEach(img => {
    img = img.default
    
    if (typeof img === 'object') {
        if (img.src === 'info.js') return
        img.username = img.username

        var alreadyHas = images.filter(i => getFNameNoExt(i.src) === getFNameNoExt(img.src))
        if (!alreadyHas) images.push(img)
    }
    else fullRes.push(getFNameNoExt(img))
})

images.forEach((img, i) => {
    var fullRes = fullRes.filter(r => r.name === getFNameNoExt(img.src))
    if (fullRes.length > 0) {
        img.fullRes = fullRes[0].src
    }

    images[i] = img
})

function getFName(str) {
    if (str.includes('/')) str = str.split('/').slice(-1)[0]
    return str
}

function getFNameNoExt(str) {
  if (str.includes('/')) str = str.split('/').slice(-1)[0]
  str = str.slice(0, -1*getFExt(str, 2).length)
  return str
}

function getFExt(str, level=1) {
  str = getFName(str)
  if (level > 0) level *= -1
  if (str.includes('.')) {
    str = str.split('.')
    switch (level) {
      case 0: 
        break
      default: 
        str = str.slice(level)
        break
    }
    str = str.join('.')
  }
  return str
}

function toProper(user) {
    user = `${user.slice(0, 1).toUpperCase()}${user.slice(1)}`
    return user
}

var dId = 'workCarousel'
---
<Carousel carouselIndex={carouselIndex} dataColumns={images.length} dataId={dId}>
    {
        (
            images.map((img, i) => {
                <LargeImage id={`${dId}-${i}`} src={img.src} alt={`${getFNameNoExt(img.src)} by ${toProper(img.username)}`} draggable={false} fullRes={img.fullRes} />
            })
        )   
    }
</Carousel>